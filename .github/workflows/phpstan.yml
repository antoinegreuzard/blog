name: CI

on: [push, pull_request]

jobs:
    phpstan:
        runs-on: ubuntu-latest

        services:
            mysql:
                image: mysql:5.7
                env:
                    MYSQL_ROOT_PASSWORD: root
                ports:
                    - 3306:3306
                options: >-
                  --health-cmd="mysqladmin ping --silent"
                  --health-interval=10s
                  --health-timeout=5s
                  --health-retries=3

        steps:
            - uses: actions/checkout@v4

            - name: Set up PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.2'
                  extensions: mbstring, intl, pdo_mysql
                  tools: composer

            - name: Wait for MySQL
              run: |
                  until mysqladmin ping --host=127.0.0.1 --user=root --password=root --silent; do
                    echo 'waiting for mysql to be connectable...'
                    sleep 5
                  done

            - name: Generate APP_SECRET
              id: generate_app_secret
              run: echo "APP_SECRET=$(openssl rand -hex 16)" >> $GITHUB_ENV

            - name: Create .env.local file
              run: |
                  echo 'APP_ENV=prod' >> .env.local
                  echo "APP_SECRET=${{ env.APP_SECRET }}" >> .env.local
                  echo 'DATABASE_URL="mysql://root:root@127.0.0.1:3306/ci_test_database?charset=utf8mb4"' >> .env.local

            - name: Create databases
              run: |
                  mysql --host=127.0.0.1 --user=root --password=root --execute="CREATE DATABASE IF NOT EXISTS ci_test_database;"

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

            - name: Run database migrations for production
              env:
                  DATABASE_URL: mysql://root:root@127.0.0.1:3306/ci_test_database
              run: php bin/console doctrine:migrations:migrate --env=prod --no-interaction
            
            - name: Clear Symfony cache
              run: php bin/console cache:clear --env=dev

            - name: Run PHPStan
              run: vendor/bin/phpstan analyse
